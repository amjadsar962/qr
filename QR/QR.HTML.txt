<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>QR Code Designer Pro | The Ultimate QR Generator</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/spectrum/1.8.1/spectrum.min.css">
    <script src="https://cdn.rawgit.com/davidshimjs/qrcodejs/gh-pages/qrcode.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/html2canvas/1.4.1/html2canvas.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/spectrum/1.8.1/spectrum.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/qr-scanner@1.4.2/qr-scanner.min.js"></script>
    <style>
        /* CSS would be extremely lengthy for this comprehensive design */
        /* Here's a simplified version focusing on key components */

        :root {
            --primary-color: #4361ee;
            --primary-dark: #3a0ca3;
            --primary-light: #4895ef;
            --secondary-color: #3f37c9;
            --success-color: #4cc9f0;
            --danger-color: #f72585;
            --warning-color: #f8961e;
            --info-color: #43aa8b;
            --light-color: #f8f9fa;
            --dark-color: #212529;
            --gray-color: #6c757d;
            --white: #ffffff;
            --black: #000000;
            --sidebar-width: 280px;
            --header-height: 80px;
            --border-radius: 8px;
            --box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            --transition: all 0.3s ease;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
        }

        body {
            background-color: #f5f7fb;
            color: var(--dark-color);
            line-height: 1.6;
            overflow-x: hidden;
        }

        .app-container {
            display: flex;
            min-height: 100vh;
        }

        /* Sidebar Styles */
        .sidebar {
            width: var(--sidebar-width);
            background-color: var(--dark-color);
            color: var(--white);
            display: flex;
            flex-direction: column;
            transition: var(--transition);
            position: fixed;
            height: 100vh;
            z-index: 100;
        }

        .logo {
            padding: 20px;
            font-size: 1.5rem;
            font-weight: 700;
            display: flex;
            align-items: center;
            gap: 10px;
            border-bottom: 1px solid rgba(255, 255, 255, 0.1);
        }

        .nav-menu {
            list-style: none;
            flex: 1;
            padding: 20px 0;
            overflow-y: auto;
        }

        .nav-menu li {
            padding: 12px 20px;
            cursor: pointer;
            display: flex;
            align-items: center;
            gap: 12px;
            transition: var(--transition);
            border-left: 4px solid transparent;
        }

        .nav-menu li:hover {
            background-color: rgba(255, 255, 255, 0.05);
        }

        .nav-menu li.active {
            background-color: rgba(67, 97, 238, 0.2);
            border-left-color: var(--primary-color);
        }

        .user-area {
            padding: 20px;
            border-top: 1px solid rgba(255, 255, 255, 0.1);
            display: flex;
            align-items: center;
            gap: 12px;
        }

        .user-avatar {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            background-color: var(--primary-color);
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .user-info {
            display: flex;
            flex-direction: column;
        }

        .username {
            font-weight: 600;
        }

        .user-plan {
            font-size: 0.8rem;
            opacity: 0.8;
        }

        /* Main Content Styles */
        .main-content {
            flex: 1;
            margin-left: var(--sidebar-width);
            min-height: 100vh;
            background-color: #f5f7fb;
        }

        .content-section {
            display: none;
            padding: 30px;
        }

        .content-section.active {
            display: block;
            animation: fadeIn 0.3s ease;
        }

        .section-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 30px;
        }

        .section-header h1 {
            font-size: 1.8rem;
            color: var(--dark-color);
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .section-actions {
            display: flex;
            gap: 10px;
        }

        .btn {
            padding: 10px 20px;
            border: none;
            border-radius: var(--border-radius);
            cursor: pointer;
            font-weight: 600;
            transition: var(--transition);
            display: inline-flex;
            align-items: center;
            gap: 8px;
        }

        .btn-primary {
            background-color: var(--primary-color);
            color: white;
        }

        .btn-primary:hover {
            background-color: var(--primary-dark);
        }

        .btn-secondary {
            background-color: var(--gray-color);
            color: white;
        }

        .btn-secondary:hover {
            background-color: #5a6268;
        }

        .btn-success {
            background-color: var(--success-color);
            color: white;
        }

        .btn-danger {
            background-color: var(--danger-color);
            color: white;
        }

        .btn-info {
            background-color: var(--info-color);
            color: white;
        }

        .btn-warning {
            background-color: var(--warning-color);
            color: white;
        }

        .btn-xs {
            padding: 5px 10px;
            font-size: 0.8rem;
        }

        .btn-sm {
            padding: 8px 15px;
            font-size: 0.9rem;
        }

        /* Design Area Styles */
        .design-area {
            display: flex;
            gap: 30px;
        }

        .config-panel {
            flex: 1;
            max-width: 400px;
            background-color: var(--white);
            border-radius: var(--border-radius);
            box-shadow: var(--box-shadow);
            padding: 20px;
            overflow-y: auto;
            max-height: calc(100vh - 180px);
        }

        .panel-section {
            margin-bottom: 30px;
        }

        .panel-section h3 {
            margin-bottom: 20px;
            font-size: 1.1rem;
            color: var(--dark-color);
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .form-group {
            margin-bottom: 20px;
        }

        label {
            display: block;
            margin-bottom: 8px;
            font-weight: 500;
            color: var(--dark-color);
            display: flex;
            align-items: center;
            gap: 8px;
        }

        input[type="text"],
        input[type="email"],
        input[type="tel"],
        input[type="url"],
        input[type="password"],
        input[type="number"],
        textarea,
        select {
            width: 100%;
            padding: 12px;
            border: 1px solid #ddd;
            border-radius: var(--border-radius);
            font-size: 1rem;
            transition: var(--transition);
        }

        input:focus,
        textarea:focus,
        select:focus {
            border-color: var(--primary-color);
            outline: none;
            box-shadow: 0 0 0 3px rgba(67, 97, 238, 0.2);
        }

        textarea {
            min-height: 100px;
            resize: vertical;
        }

        input[type="range"] {
            -webkit-appearance: none;
            width: 100%;
            height: 8px;
            background: #ddd;
            border-radius: 5px;
            margin: 10px 0;
        }

        input[type="range"]::-webkit-slider-thumb {
            -webkit-appearance: none;
            width: 20px;
            height: 20px;
            background: var(--primary-color);
            border-radius: 50%;
            cursor: pointer;
        }

        .range-values {
            display: flex;
            justify-content: space-between;
            font-size: 0.8rem;
            color: var(--gray-color);
        }

        .btn-group {
            display: flex;
            flex-wrap: wrap;
            gap: 8px;
            margin-top: 10px;
        }

        .content-type-btn {
            padding: 8px 12px;
            background-color: #e9ecef;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            transition: var(--transition);
            font-size: 0.9rem;
            display: flex;
            align-items: center;
            gap: 6px;
        }

        .content-type-btn.active {
            background-color: var(--primary-color);
            color: white;
        }

        .content-form {
            display: none;
            animation: fadeIn 0.3s ease;
        }

        .content-form.active {
            display: block;
        }

        .color-picker {
            width: 100%;
            height: 40px;
            border-radius: var(--border-radius);
            border: 1px solid #ddd;
            cursor: pointer;
        }

        /* Preview Panel Styles */
        .preview-panel {
            flex: 2;
            min-width: 0;
        }

        .preview-container {
            background-color: var(--white);
            border-radius: var(--border-radius);
            box-shadow: var(--box-shadow);
            padding: 20px;
            margin-bottom: 20px;
        }

        .preview-toolbar {
            display: flex;
            justify-content: space-between;
            margin-bottom: 20px;
            padding-bottom: 15px;
            border-bottom: 1px solid #eee;
        }

        .preview-area {
            min-height: 400px;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            border: 2px dashed #ddd;
            border-radius: var(--border-radius);
            padding: 30px;
            position: relative;
        }

        #qrcode {
            display: flex;
            justify-content: center;
            align-items: center;
            position: relative;
            z-index: 1;
        }

        #qrcode img {
            max-width: 100%;
            height: auto;
            transition: var(--transition);
        }

        .preview-overlay {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            z-index: 0;
            pointer-events: none;
        }

        .hint {
            color: var(--gray-color);
            font-style: italic;
            text-align: center;
            margin-top: 20px;
        }

        .action-buttons {
            display: flex;
            gap: 10px;
            margin-top: 20px;
        }

        /* Modal Styles */
        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            z-index: 1000;
            align-items: center;
            justify-content: center;
        }

        .modal-content {
            background-color: var(--white);
            padding: 30px;
            border-radius: var(--border-radius);
            max-width: 500px;
            width: 90%;
            text-align: center;
            position: relative;
            animation: modalFadeIn 0.3s ease;
        }

        .close-modal {
            position: absolute;
            top: 15px;
            right: 15px;
            font-size: 1.5rem;
            cursor: pointer;
            color: var(--gray-color);
        }

        .modal-icon {
            font-size: 3rem;
            margin-bottom: 20px;
        }

        .modal-icon.success {
            color: var(--success-color);
        }

        .modal-icon.error {
            color: var(--danger-color);
        }

        .loading-spinner {
            margin: 20px 0;
        }

        .spinner {
            width: 50px;
            height: 50px;
            border: 5px solid #f3f3f3;
            border-top: 5px solid var(--primary-color);
            border-radius: 50%;
            animation: spin 1s linear infinite;
            margin: 0 auto;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(10px); }
            to { opacity: 1; transform: translateY(0); }
        }

        @keyframes modalFadeIn {
            from { opacity: 0; transform: translateY(-20px); }
            to { opacity: 1; transform: translateY(0); }
        }

        /* Responsive Styles */
        @media (max-width: 1200px) {
            .design-area {
                flex-direction: column;
            }
            
            .config-panel {
                max-width: 100%;
            }
        }

        @media (max-width: 768px) {
            .sidebar {
                width: 70px;
                overflow: hidden;
            }
            
            .sidebar .logo span,
            .sidebar .nav-menu li span,
            .sidebar .user-info {
                display: none;
            }
            
            .sidebar .logo {
                justify-content: center;
            }
            
            .sidebar .nav-menu li {
                justify-content: center;
                padding: 15px 0;
            }
            
            .main-content {
                margin-left: 70px;
            }
            
            .section-header {
                flex-direction: column;
                align-items: flex-start;
                gap: 15px;
            }
        }

        @media (max-width: 576px) {
            .content-section {
                padding: 15px;
            }
            
            .action-buttons {
                flex-direction: column;
            }
            
            .btn {
                width: 100%;
                justify-content: center;
            }
        }
    </style>
</head>
<body>
    <div class="app-container">
        <!-- Navigation Sidebar -->
        <nav class="sidebar">
            <div class="logo">
                <i class="fas fa-qrcode"></i>
                <span>QR Designer Pro</span>
            </div>
            <ul class="nav-menu">
                <li class="active" data-section="design">
                    <i class="fas fa-paint-brush"></i> Design
                </li>
                <li data-section="templates">
                    <i class="fas fa-templates"></i> Templates
                </li>
                <li data-section="history">
                    <i class="fas fa-history"></i> History
                </li>
                <li data-section="analytics">
                    <i class="fas fa-chart-bar"></i> Analytics
                </li>
                <li data-section="batch">
                    <i class="fas fa-layer-group"></i> Batch Generate
                </li>
                <li data-section="scan">
                    <i class="fas fa-camera"></i> QR Scanner
                </li>
                <li data-section="api">
                    <i class="fas fa-code"></i> API
                </li>
                <li data-section="settings">
                    <i class="fas fa-cog"></i> Settings
                </li>
            </ul>
            <div class="user-area">
                <div class="user-avatar">
                    <i class="fas fa-user"></i>
                </div>
                <div class="user-info">
                    <span class="username">Pro User</span>
                    <span class="user-plan">Enterprise Plan</span>
                </div>
            </div>
        </nav>

        <!-- Main Content Area -->
        <main class="main-content">
            <!-- Design Section -->
            <section class="content-section active" id="design-section">
                <div class="section-header">
                    <h1><i class="fas fa-paint-brush"></i> QR Code Designer</h1>
                    <div class="section-actions">
                        <button class="btn btn-primary" id="quick-generate">
                            <i class="fas fa-bolt"></i> Quick Generate
                        </button>
                        <div class="dropdown">
                            <button class="btn btn-secondary dropdown-toggle">
                                <i class="fas fa-share-alt"></i> Share
                            </button>
                            <div class="dropdown-menu">
                                <a href="#" class="dropdown-item"><i class="fas fa-link"></i> Get Shareable Link</a>
                                <a href="#" class="dropdown-item"><i class="fab fa-facebook"></i> Facebook</a>
                                <a href="#" class="dropdown-item"><i class="fab fa-twitter"></i> Twitter</a>
                                <a href="#" class="dropdown-item"><i class="fab fa-linkedin"></i> LinkedIn</a>
                                <a href="#" class="dropdown-item"><i class="fas fa-envelope"></i> Email</a>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="design-area">
                    <!-- Content Configuration Panel -->
                    <div class="config-panel">
                        <div class="panel-section">
                            <h3><i class="fas fa-edit"></i> Content Configuration</h3>
                            <div class="content-type-selector">
                                <div class="btn-group">
                                    <button class="btn btn-sm content-type-btn active" data-type="text">
                                        <i class="fas fa-font"></i> Text
                                    </button>
                                    <button class="btn btn-sm content-type-btn" data-type="url">
                                        <i class="fas fa-link"></i> URL
                                    </button>
                                    <button class="btn btn-sm content-type-btn" data-type="wifi">
                                        <i class="fas fa-wifi"></i> WiFi
                                    </button>
                                    <button class="btn btn-sm content-type-btn" data-type="contact">
                                        <i class="fas fa-address-card"></i> Contact
                                    </button>
                                    <button class="btn btn-sm content-type-btn" data-type="email">
                                        <i class="fas fa-envelope"></i> Email
                                    </button>
                                    <button class="btn btn-sm content-type-btn" data-type="sms">
                                        <i class="fas fa-sms"></i> SMS
                                    </button>
                                    <button class="btn btn-sm content-type-btn" data-type="geo">
                                        <i class="fas fa-map-marker-alt"></i> Location
                                    </button>
                                    <button class="btn btn-sm content-type-btn" data-type="calendar">
                                        <i class="fas fa-calendar-alt"></i> Event
                                    </button>
                                </div>
                            </div>

                            <div class="content-forms">
                                <!-- Text/URL Form -->
                                <div class="content-form active" id="text-form">
                                    <div class="form-group">
                                        <label for="qr-text"><i class="fas fa-align-left"></i> Content:</label>
                                        <textarea id="qr-text" placeholder="Enter text or URL"></textarea>
                                    </div>
                                </div>
                                
                                <!-- WiFi Form -->
                                <div class="content-form" id="wifi-form">
                                    <div class="form-group">
                                        <label for="wifi-ssid"><i class="fas fa-network-wired"></i> Network SSID:</label>
                                        <input type="text" id="wifi-ssid" placeholder="Your WiFi name">
                                    </div>
                                    <div class="form-group">
                                        <label for="wifi-password"><i class="fas fa-key"></i> Password:</label>
                                        <input type="text" id="wifi-password" placeholder="WiFi password">
                                    </div>
                                    <div class="form-group">
                                        <label for="wifi-security"><i class="fas fa-shield-alt"></i> Security:</label>
                                        <select id="wifi-security">
                                            <option value="WPA">WPA/WPA2</option>
                                            <option value="WEP">WEP</option>
                                            <option value="">None</option>
                                        </select>
                                    </div>
                                    <div class="form-group">
                                        <label for="wifi-hidden"><i class="fas fa-eye-slash"></i> Hidden Network:</label>
                                        <input type="checkbox" id="wifi-hidden">
                                    </div>
                                </div>
                                
                                <!-- Contact Form -->
                                <div class="content-form" id="contact-form">
                                    <div class="form-group">
                                        <label for="contact-name"><i class="fas fa-user"></i> Name:</label>
                                        <input type="text" id="contact-name" placeholder="Full name">
                                    </div>
                                    <div class="form-group">
                                        <label for="contact-org"><i class="fas fa-building"></i> Organization:</label>
                                        <input type="text" id="contact-org" placeholder="Company name">
                                    </div>
                                    <div class="form-group">
                                        <label for="contact-title"><i class="fas fa-briefcase"></i> Title:</label>
                                        <input type="text" id="contact-title" placeholder="Job title">
                                    </div>
                                    <div class="form-group">
                                        <label for="contact-phone"><i class="fas fa-phone"></i> Phone:</label>
                                        <input type="tel" id="contact-phone" placeholder="Phone number">
                                    </div>
                                    <div class="form-group">
                                        <label for="contact-email"><i class="fas fa-envelope"></i> Email:</label>
                                        <input type="email" id="contact-email" placeholder="Email address">
                                    </div>
                                    <div class="form-group">
                                        <label for="contact-url"><i class="fas fa-globe"></i> Website:</label>
                                        <input type="url" id="contact-url" placeholder="Website URL">
                                    </div>
                                    <div class="form-group">
                                        <label for="contact-address"><i class="fas fa-map-marked-alt"></i> Address:</label>
                                        <input type="text" id="contact-address" placeholder="Physical address">
                                    </div>
                                    <div class="form-group">
                                        <label for="contact-notes"><i class="fas fa-sticky-note"></i> Notes:</label>
                                        <textarea id="contact-notes" placeholder="Additional information"></textarea>
                                    </div>
                                </div>
                                
                                <!-- Email Form -->
                                <div class="content-form" id="email-form">
                                    <div class="form-group">
                                        <label for="email-to"><i class="fas fa-at"></i> Recipient:</label>
                                        <input type="email" id="email-to" placeholder="Recipient email">
                                    </div>
                                    <div class="form-group">
                                        <label for="email-subject"><i class="fas fa-heading"></i> Subject:</label>
                                        <input type="text" id="email-subject" placeholder="Email subject">
                                    </div>
                                    <div class="form-group">
                                        <label for="email-body"><i class="fas fa-envelope-open-text"></i> Body:</label>
                                        <textarea id="email-body" placeholder="Email content"></textarea>
                                    </div>
                                </div>
                                
                                <!-- SMS Form -->
                                <div class="content-form" id="sms-form">
                                    <div class="form-group">
                                        <label for="sms-number"><i class="fas fa-mobile-alt"></i> Phone Number:</label>
                                        <input type="tel" id="sms-number" placeholder="Recipient phone number">
                                    </div>
                                    <div class="form-group">
                                        <label for="sms-message"><i class="fas fa-sms"></i> Message:</label>
                                        <textarea id="sms-message" placeholder="SMS text"></textarea>
                                    </div>
                                </div>
                                
                                <!-- Geolocation Form -->
                                <div class="content-form" id="geo-form">
                                    <div class="form-group">
                                        <label for="geo-latitude"><i class="fas fa-location-arrow"></i> Latitude:</label>
                                        <input type="number" id="geo-latitude" placeholder="e.g. 40.7128" step="0.000001">
                                    </div>
                                    <div class="form-group">
                                        <label for="geo-longitude"><i class="fas fa-location-arrow"></i> Longitude:</label>
                                        <input type="number" id="geo-longitude" placeholder="e.g. -74.0060" step="0.000001">
                                    </div>
                                    <div class="form-group">
                                        <label for="geo-altitude"><i class="fas fa-mountain"></i> Altitude (optional):</label>
                                        <input type="number" id="geo-altitude" placeholder="Meters above sea level">
                                    </div>
                                    <div class="form-group">
                                        <button class="btn btn-sm btn-secondary" id="get-current-location">
                                            <i class="fas fa-map-marker-alt"></i> Use Current Location
                                        </button>
                                    </div>
                                </div>
                                
                                <!-- Calendar Event Form -->
                                <div class="content-form" id="calendar-form">
                                    <div class="form-group">
                                        <label for="event-title"><i class="fas fa-heading"></i> Event Title:</label>
                                        <input type="text" id="event-title" placeholder="Event name">
                                    </div>
                                    <div class="form-group">
                                        <label for="event-description"><i class="fas fa-align-left"></i> Description:</label>
                                        <textarea id="event-description" placeholder="Event details"></textarea>
                                    </div>
                                    <div class="form-group">
                                        <label for="event-location"><i class="fas fa-map-marker-alt"></i> Location:</label>
                                        <input type="text" id="event-location" placeholder="Event venue">
                                    </div>
                                    <div class="form-group">
                                        <label for="event-start"><i class="fas fa-clock"></i> Start Date/Time:</label>
                                        <input type="datetime-local" id="event-start">
                                    </div>
                                    <div class="form-group">
                                        <label for="event-end"><i class="fas fa-clock"></i> End Date/Time:</label>
                                        <input type="datetime-local" id="event-end">
                                    </div>
                                    <div class="form-group">
                                        <label for="event-all-day"><i class="fas fa-calendar-day"></i> All Day Event:</label>
                                        <input type="checkbox" id="event-all-day">
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Design Options Panel -->
                        <div class="panel-section">
                            <h3><i class="fas fa-palette"></i> Design Options</h3>
                            
                            <div class="form-group">
                                <label><i class="fas fa-brush"></i> Color Scheme:</label>
                                <div class="color-scheme-selector">
                                    <button class="btn btn-xs scheme-btn active" data-scheme="monochrome">
                                        Monochrome
                                    </button>
                                    <button class="btn btn-xs scheme-btn" data-scheme="gradient">
                                        Gradient
                                    </button>
                                    <button class="btn btn-xs scheme-btn" data-scheme="multicolor">
                                        Multicolor
                                    </button>
                                    <button class="btn btn-xs scheme-btn" data-scheme="pattern">
                                        Pattern
                                    </button>
                                </div>
                            </div>

                            <div class="color-options">
                                <!-- Monochrome Options -->
                                <div class="color-option active" data-option="monochrome">
                                    <div class="form-group">
                                        <label for="qr-color"><i class="fas fa-fill-drip"></i> Foreground:</label>
                                        <input type="text" id="qr-color" value="#000000" class="color-picker">
                                    </div>
                                    <div class="form-group">
                                        <label for="qr-bg"><i class="fas fa-fill"></i> Background:</label>
                                        <input type="text" id="qr-bg" value="#ffffff" class="color-picker">
                                    </div>
                                </div>
                                
                                <!-- Gradient Options -->
                                <div class="color-option" data-option="gradient">
                                    <div class="form-group">
                                        <label for="gradient-start"><i class="fas fa-fill-drip"></i> Start Color:</label>
                                        <input type="text" id="gradient-start" value="#4361ee" class="color-picker">
                                    </div>
                                    <div class="form-group">
                                        <label for="gradient-end"><i class="fas fa-fill-drip"></i> End Color:</label>
                                        <input type="text" id="gradient-end" value="#3a0ca3" class="color-picker">
                                    </div>
                                    <div class="form-group">
                                        <label for="gradient-type"><i class="fas fa-sliders-h"></i> Gradient Type:</label>
                                        <select id="gradient-type">
                                            <option value="linear">Linear</option>
                                            <option value="radial">Radial</option>
                                            <option value="conic">Conic</option>
                                        </select>
                                    </div>
                                    <div class="form-group">
                                        <label for="gradient-direction"><i class="fas fa-arrows-alt"></i> Direction:</label>
                                        <select id="gradient-direction">
                                            <option value="to right">Horizontal</option>
                                            <option value="to bottom">Vertical</option>
                                            <option value="to bottom right">Diagonal</option>
                                            <option value="circle">Circular</option>
                                        </select>
                                    </div>
                                </div>
                                
                                <!-- Multicolor Options -->
                                <div class="color-option" data-option="multicolor">
                                    <div class="form-group">
                                        <label><i class="fas fa-palette"></i> Color Palette:</label>
                                        <div class="color-palette">
                                            <input type="text" class="color-picker palette-color" value="#4361ee">
                                            <input type="text" class="color-picker palette-color" value="#3a0ca3">
                                            <input type="text" class="color-picker palette-color" value="#7209b7">
                                            <input type="text" class="color-picker palette-color" value="#f72585">
                                            <button class="btn btn-xs btn-secondary" id="add-color">
                                                <i class="fas fa-plus"></i>
                                            </button>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="multicolor-pattern"><i class="fas fa-project-diagram"></i> Pattern:</label>
                                        <select id="multicolor-pattern">
                                            <option value="random">Random</option>
                                            <option value="horizontal">Horizontal Stripes</option>
                                            <option value="vertical">Vertical Stripes</option>
                                            <option value="diagonal">Diagonal Stripes</option>
                                            <option value="checker">Checkerboard</option>
                                            <option value="cluster">Cluster</option>
                                        </select>
                                    </div>
                                </div>
                                
                                <!-- Pattern Options -->
                                <div class="color-option" data-option="pattern">
                                    <div class="form-group">
                                        <label for="pattern-type"><i class="fas fa-shapes"></i> Pattern Type:</label>
                                        <select id="pattern-type">
                                            <option value="dots">Dots</option>
                                            <option value="lines">Lines</option>
                                            <option value="squares">Squares</option>
                                            <option value="circles">Circles</option>
                                            <option value="triangles">Triangles</option>
                                            <option value="custom">Custom Image</option>
                                        </select>
                                    </div>
                                    <div class="form-group" id="pattern-color-group">
                                        <label for="pattern-color"><i class="fas fa-fill-drip"></i> Pattern Color:</label>
                                        <input type="text" id="pattern-color" value="#000000" class="color-picker">
                                    </div>
                                    <div class="form-group" id="pattern-image-group" style="display: none;">
                                        <label for="pattern-image"><i class="fas fa-image"></i> Pattern Image:</label>
                                        <input type="file" id="pattern-image" accept="image/*">
                                    </div>
                                    <div class="form-group">
                                        <label for="pattern-density"><i class="fas fa-sliders-h"></i> Density:</label>
                                        <input type="range" id="pattern-density" min="1" max="10" value="5">
                                    </div>
                                </div>
                            </div>

                            <div class="form-group">
                                <label for="qr-size"><i class="fas fa-expand"></i> Size (px):</label>
                                <input type="range" id="qr-size" min="50" max="2000" value="400">
                                <div class="range-values">
                                    <span>50</span>
                                    <span id="size-value">400</span>
                                    <span>2000</span>
                                </div>
                            </div>
                            
                            <div class="form-group">
                                <label for="qr-margin"><i class="fas fa-border-all"></i> Margin:</label>
                                <input type="range" id="qr-margin" min="0" max="50" value="4">
                                <span id="margin-value">4</span>
                            </div>
                            
                            <div class="form-group">
                                <label for="qr-error"><i class="fas fa-shield-alt"></i> Error Correction:</label>
                                <select id="qr-error">
                                    <option value="L">Low (7%)</option>
                                    <option value="M" selected>Medium (15%)</option>
                                    <option value="Q">Quartile (25%)</option>
                                    <option value="H">High (30%)</option>
                                </select>
                            </div>
                            
                            <div class="form-group">
                                <label for="qr-version"><i class="fas fa-layer-group"></i> QR Version (1-40):</label>
                                <input type="number" id="qr-version" min="1" max="40" value="5">
                            </div>
                            
                            <div class="form-group">
                                <label><i class="fas fa-shapes"></i> Module Shape:</label>
                                <div class="btn-group">
                                    <button class="btn btn-xs shape-btn active" data-shape="square">
                                        <i class="fas fa-square"></i> Square
                                    </button>
                                    <button class="btn btn-xs shape-btn" data-shape="circle">
                                        <i class="fas fa-circle"></i> Circle
                                    </button>
                                    <button class="btn btn-xs shape-btn" data-shape="rounded">
                                        <i class="fas fa-square-rounded"></i> Rounded
                                    </button>
                                    <button class="btn btn-xs shape-btn" data-shape="diamond">
                                        <i class="fas fa-diamond"></i> Diamond
                                    </button>
                                </div>
                            </div>
                            
                            <div class="form-group">
                                <label><i class="fas fa-eye"></i> Eye Style:</label>
                                <div class="btn-group">
                                    <button class="btn btn-xs eye-btn active" data-eye="square">
                                        <i class="fas fa-square"></i> Square
                                    </button>
                                    <button class="btn btn-xs eye-btn" data-eye="circle">
                                        <i class="fas fa-circle"></i> Circle
                                    </button>
                                    <button class="btn btn-xs eye-btn" data-eye="rounded">
                                        <i class="fas fa-square-rounded"></i> Rounded
                                    </button>
                                    <button class="btn btn-xs eye-btn" data-eye="fancy">
                                        <i class="fas fa-star"></i> Fancy
                                    </button>
                                </div>
                            </div>
                            
                            <div class="form-group">
                                <label for="qr-logo"><i class="fas fa-image"></i> Add Logo:</label>
                                <input type="file" id="qr-logo" accept="image/*">
                                <div class="logo-preview" id="logo-preview"></div>
                                <div class="logo-controls">
                                    <label for="logo-size">Logo Size (%):</label>
                                    <input type="range" id="logo-size" min="5" max="30" value="15">
                                    <span id="logo-size-value">15</span>
                                </div>
                                <div class="form-group">
                                    <label for="logo-bg"><i class="fas fa-fill"></i> Logo Background:</label>
                                    <select id="logo-bg">
                                        <option value="none">None</option>
                                        <option value="circle">Circle</option>
                                        <option value="square">Square</option>
                                        <option value="rounded">Rounded Square</option>
                                    </select>
                                </div>
                                <div class="form-group" id="logo-bg-color-group">
                                    <label for="logo-bg-color"><i class="fas fa-fill-drip"></i> BG Color:</label>
                                    <input type="text" id="logo-bg-color" value="#ffffff" class="color-picker">
                                </div>
                            </div>
                            
                            <div class="form-group">
                                <label for="qr-text-overlay"><i class="fas fa-font"></i> Text Overlay:</label>
                                <input type="text" id="qr-text-overlay" placeholder="Optional text below QR">
                                <div class="text-overlay-options">
                                    <label for="text-overlay-color">Color:</label>
                                    <input type="text" id="text-overlay-color" value="#000000" class="color-picker">
                                    <label for="text-overlay-size">Size:</label>
                                    <select id="text-overlay-size">
                                        <option value="small">Small</option>
                                        <option value="medium" selected>Medium</option>
                                        <option value="large">Large</option>
                                    </select>
                                </div>
                            </div>
                            
                            <div class="form-group">
                                <label for="qr-frame"><i class="fas fa-crop-alt"></i> Frame Style:</label>
                                <select id="qr-frame">
                                    <option value="none">None</option>
                                    <option value="simple">Simple</option>
                                    <option value="rounded">Rounded</option>
                                    <option value="fancy">Fancy</option>
                                    <option value="custom">Custom Image</option>
                                </select>
                                <div class="frame-image-upload" id="frame-image-upload" style="display: none;">
                                    <label for="frame-image"><i class="fas fa-image"></i> Frame Image:</label>
                                    <input type="file" id="frame-image" accept="image/*">
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Preview Panel -->
                    <div class="preview-panel">
                        <div class="preview-container">
                            <div class="preview-toolbar">
                                <div class="preview-size">
                                    <button class="btn btn-xs" data-size="small"><i class="fas fa-mobile-alt"></i> Small</button>
                                    <button class="btn btn-xs" data-size="medium"><i class="fas fa-tablet-alt"></i> Medium</button>
                                    <button class="btn btn-xs active" data-size="large"><i class="fas fa-desktop"></i> Large</button>
                                    <button class="btn btn-xs" data-size="actual"><i class="fas fa-expand"></i> Actual Size</button>
                                </div>
                                <div class="preview-actions">
                                    <button class="btn btn-xs" id="rotate-left"><i class="fas fa-undo"></i></button>
                                    <button class="btn btn-xs" id="rotate-right"><i class="fas fa-redo"></i></button>
                                    <button class="btn btn-xs" id="flip-horizontal"><i class="fas fa-arrows-alt-h"></i></button>
                                    <button class="btn btn-xs" id="flip-vertical"><i class="fas fa-arrows-alt-v"></i></button>
                                    <button class="btn btn-xs" id="reset-transform"><i class="fas fa-sync-alt"></i></button>
                                </div>
                            </div>
                            
                            <div class="preview-area">
                                <div id="qrcode"></div>
                                <div class="preview-overlay" id="preview-overlay"></div>
                                <p class="hint">Your QR code will appear here</p>
                            </div>
                            
                            <div class="preview-options">
                                <h4><i class="fas fa-sliders-h"></i> Preview Options</h4>
                                <div class="form-group">
                                    <label for="preview-bg">Background:</label>
                                    <select id="preview-bg">
                                        <option value="transparent">Transparent</option>
                                        <option value="white" selected>White</option>
                                        <option value="black">Black</option>
                                        <option value="custom">Custom Color</option>
                                    </select>
                                    <input type="text" id="preview-custom-bg" value="#f0f0f0" class="color-picker" style="display: none;">
                                </div>
                                <div class="form-group">
                                    <label for="preview-shadow">Shadow:</label>
                                    <input type="checkbox" id="preview-shadow" checked>
                                    <select id="preview-shadow-type" style="width: 60%;">
                                        <option value="soft">Soft</option>
                                        <option value="hard">Hard</option>
                                        <option value="long">Long</option>
                                        <option value="glow">Glow</option>
                                    </select>
                                </div>
                                <div class="form-group">
                                    <label for="preview-device">Device Mockup:</label>
                                    <select id="preview-device">
                                        <option value="none">None</option>
                                        <option value="iphone">iPhone</option>
                                        <option value="ipad">iPad</option>
                                        <option value="macbook">MacBook</option>
                                        <option value="android">Android</option>
                                        <option value="window">Window</option>
                                    </select>
                                </div>
                                <div class="form-group">
                                    <label for="preview-surface">Surface:</label>
                                    <select id="preview-surface">
                                        <option value="none">None</option>
                                        <option value="paper">Paper</option>
                                        <option value="wood">Wood</option>
                                        <option value="metal">Metal</option>
                                        <option value="fabric">Fabric</option>
                                        <option value="wall">Wall</option>
                                    </select>
                                </div>
                            </div>
                        </div>
                        
                        <div class="action-buttons">
                            <button class="btn btn-primary" id="generate-btn">
                                <i class="fas fa-magic"></i> Generate QR Code
                            </button>
                            <div class="dropdown">
                                <button class="btn btn-success dropdown-toggle" id="download-btn">
                                    <i class="fas fa-download"></i> Download
                                </button>
                                <div class="dropdown-menu">
                                    <a href="#" class="dropdown-item" data-format="png"><i class="fas fa-file-image"></i> PNG</a>
                                    <a href="#" class="dropdown-item" data-format="jpg"><i class="fas fa-file-image"></i> JPG</a>
                                    <a href="#" class="dropdown-item" data-format="svg"><i class="fas fa-file-code"></i> SVG</a>
                                    <a href="#" class="dropdown-item" data-format="pdf"><i class="fas fa-file-pdf"></i> PDF</a>
                                    <a href="#" class="dropdown-item" data-format="eps"><i class="fas fa-file-alt"></i> EPS</a>
                                </div>
                            </div>
                            <button class="btn btn-secondary" id="save-btn">
                                <i class="fas fa-save"></i> Save to Project
                            </button>
                            <button class="btn btn-info" id="test-btn">
                                <i class="fas fa-check-circle"></i> Test QR Code
                            </button>
                        </div>
                    </div>
                </div>
            </section>

            <!-- Templates Section -->
            <section class="content-section" id="templates-section">
                <div class="section-header">
                    <h1><i class="fas fa-templates"></i> QR Code Templates</h1>
                    <div class="section-actions">
                        <div class="search-box">
                            <i class="fas fa-search"></i>
                            <input type="text" placeholder="Search templates...">
                        </div>
                        <div class="dropdown">
                            <button class="btn btn-secondary dropdown-toggle">
                                <i class="fas fa-filter"></i> Filter
                            </button>
                            <div class="dropdown-menu">
                                <a href="#" class="dropdown-item active">All Templates</a>
                                <a href="#" class="dropdown-item">Business</a>
                                <a href="#" class="dropdown-item">Marketing</a>
                                <a href="#" class="dropdown-item">Social Media</a>
                                <a href="#" class="dropdown-item">Events</a>
                                <a href="#" class="dropdown-item">Personal</a>
                            </div>
                        </div>
                    </div>
                </div>
                
                <div class="templates-grid">
                    <!-- Templates will be loaded here -->
                </div>
            </section>

            <!-- History Section -->
            <section class="content-section" id="history-section">
                <div class="section-header">
                    <h1><i class="fas fa-history"></i> QR Code History</h1>
                    <div class="section-actions">
                        <button class="btn btn-danger" id="clear-history">
                            <i class="fas fa-trash"></i> Clear History
                        </button>
                        <div class="dropdown">
                            <button class="btn btn-secondary dropdown-toggle">
                                <i class="fas fa-download"></i> Export
                            </button>
                            <div class="dropdown-menu">
                                <a href="#" class="dropdown-item"><i class="fas fa-file-csv"></i> CSV</a>
                                <a href="#" class="dropdown-item"><i class="fas fa-file-excel"></i> Excel</a>
                                <a href="#" class="dropdown-item"><i class="fas fa-file-archive"></i> ZIP</a>
                            </div>
                        </div>
                    </div>
                </div>
                
                <div class="history-grid" id="history-grid">
                    <!-- History items will be loaded here -->
                </div>
            </section>

            <!-- Analytics Section -->
            <section class="content-section" id="analytics-section">
                <div class="section-header">
                    <h1><i class="fas fa-chart-bar"></i> QR Code Analytics</h1>
                    <div class="section-actions">
                        <div class="date-range">
                            <i class="fas fa-calendar-alt"></i>
                            <select id="analytics-range">
                                <option value="7days">Last 7 Days</option>
                                <option value="30days" selected>Last 30 Days</option>
                                <option value="90days">Last 90 Days</option>
                                <option value="custom">Custom Range</option>
                            </select>
                        </div>
                        <button class="btn btn-secondary">
                            <i class="fas fa-download"></i> Export Report
                        </button>
                    </div>
                </div>
                
                <div class="analytics-dashboard">
                    <div class="analytics-cards">
                        <div class="card">
                            <div class="card-icon">
                                <i class="fas fa-qrcode"></i>
                            </div>
                            <div class="card-content">
                                <h3>1,248</h3>
                                <p>Total QR Codes</p>
                            </div>
                        </div>
                        <div class="card">
                            <div class="card-icon">
                                <i class="fas fa-eye"></i>
                            </div>
                            <div class="card-content">
                                <h3>24,567</h3>
                                <p>Total Scans</p>
                            </div>
                        </div>
                        <div class="card">
                            <div class="card-icon">
                                <i class="fas fa-users"></i>
                            </div>
                            <div class="card-content">
                                <h3>8,942</h3>
                                <p>Unique Users</p>
                            </div>
                        </div>
                        <div class="card">
                            <div class="card-icon">
                                <i class="fas fa-mobile-alt"></i>
                            </div>
                            <div class="card-content">
                                <h3>72%</h3>
                                <p>Mobile Scans</p>
                            </div>
                        </div>
                    </div>
                    
                    <div class="analytics-charts">
                        <div class="chart-container">
                            <h3>Scans Over Time</h3>
                            <canvas id="scans-chart"></canvas>
                        </div>
                        <div class="chart-container">
                            <h3>Scan Locations</h3>
                            <canvas id="locations-chart"></canvas>
                        </div>
                        <div class="chart-container">
                            <h3>Device Types</h3>
                            <canvas id="devices-chart"></canvas>
                        </div>
                        <div class="chart-container">
                            <h3>Top QR Codes</h3>
                            <canvas id="top-qr-chart"></canvas>
                        </div>
                    </div>
                </div>
            </section>

            <!-- Batch Generate Section -->
            <section class="content-section" id="batch-section">
                <div class="section-header">
                    <h1><i class="fas fa-layer-group"></i> Batch QR Code Generation</h1>
                    <div class="section-actions">
                        <button class="btn btn-primary">
                            <i class="fas fa-file-import"></i> Import CSV
                        </button>
                        <button class="btn btn-success">
                            <i class="fas fa-file-export"></i> Export All
                        </button>
                    </div>
                </div>
                
                <div class="batch-generator">
                    <div class="batch-config">
                        <div class="form-group">
                            <label for="batch-template"><i class="fas fa-templates"></i> Template:</label>
                            <select id="batch-template">
                                <option value="none">None (Custom)</option>
                                <option value="business">Business Cards</option>
                                <option value="product">Product Labels</option>
                                <option value="event">Event Tickets</option>
                                <option value="inventory">Inventory Tags</option>
                            </select>
                        </div>
                        
                        <div class="form-group">
                            <label for="batch-data"><i class="fas fa-database"></i> Data Source:</label>
                            <select id="batch-data">
                                <option value="manual">Manual Entry</option>
                                <option value="csv">CSV File</option>
                                <option value="api">API Connection</option>
                                <option value="spreadsheet">Google Sheet</option>
                            </select>
                        </div>
                        
                        <div class="form-group" id="batch-csv-upload" style="display: none;">
                            <label for="batch-csv-file"><i class="fas fa-upload"></i> Upload CSV:</label>
                            <input type="file" id="batch-csv-file" accept=".csv">
                        </div>
                        
                        <div class="form-group" id="batch-api-settings" style="display: none;">
                            <label for="batch-api-url"><i class="fas fa-link"></i> API Endpoint:</label>
                            <input type="text" id="batch-api-url" placeholder="https://api.example.com/data">
                        </div>
                        
                        <div class="form-group">
                            <label for="batch-design"><i class="fas fa-palette"></i> Design:</label>
                            <select id="batch-design">
                                <option value="uniform">Uniform Design</option>
                                <option value="variable">Variable Designs</option>
                                <option value="template">From Template</option>
                            </select>
                        </div>
                        
                        <div class="form-group">
                            <label for="batch-output"><i class="fas fa-file-export"></i> Output Format:</label>
                            <select id="batch-output">
                                <option value="zip_png">ZIP of PNGs</option>
                                <option value="pdf_single">Single PDF</option>
                                <option value="pdf_multi">Multi-page PDF</option>
                                <option value="svg">SVG Bundle</option>
                            </select>
                        </div>
                        
                        <button class="btn btn-primary" id="batch-preview">
                            <i class="fas fa-eye"></i> Preview Batch
                        </button>
                    </div>
                    
                    <div class="batch-preview">
                        <div class="batch-preview-header">
                            <h3>Batch Preview</h3>
                            <div class="batch-pagination">
                                <button class="btn btn-xs" id="batch-prev"><i class="fas fa-chevron-left"></i></button>
                                <span id="batch-page">1 of 10</span>
                                <button class="btn btn-xs" id="batch-next"><i class="fas fa-chevron-right"></i></button>
                            </div>
                        </div>
                        
                        <div class="batch-preview-grid">
                            <!-- Batch items will be loaded here -->
                        </div>
                        
                        <div class="batch-actions">
                            <button class="btn btn-success" id="batch-generate">
                                <i class="fas fa-cogs"></i> Generate Batch
                            </button>
                            <button class="btn btn-secondary" id="batch-save">
                                <i class="fas fa-save"></i> Save Batch Project
                            </button>
                        </div>
                    </div>
                </div>
            </section>

            <!-- QR Scanner Section -->
            <section class="content-section" id="scan-section">
                <div class="section-header">
                    <h1><i class="fas fa-camera"></i> QR Code Scanner</h1>
                    <div class="section-actions">
                        <button class="btn btn-secondary" id="scan-history">
                            <i class="fas fa-history"></i> Scan History
                        </button>
                        <button class="btn btn-primary" id="scan-settings">
                            <i class="fas fa-cog"></i> Settings
                        </button>
                    </div>
                </div>
                
                <div class="scanner-container">
                    <div class="scanner-view">
                        <video id="scanner-video"></video>
                        <div class="scanner-overlay">
                            <div class="scanner-frame"></div>
                            <div class="scanner-instructions">
                                <p>Point your camera at a QR code to scan it</p>
                            </div>
                        </div>
                        <div class="scanner-controls">
                            <button class="btn btn-primary" id="start-scan">
                                <i class="fas fa-play"></i> Start Scanner
                            </button>
                            <button class="btn btn-secondary" id="stop-scan" disabled>
                                <i class="fas fa-stop"></i> Stop
                            </button>
                            <button class="btn btn-secondary" id="upload-scan">
                                <i class="fas fa-upload"></i> Upload Image
                            </button>
                            <button class="btn btn-secondary" id="toggle-flash">
                                <i class="fas fa-lightbulb"></i> Flashlight
                            </button>
                        </div>
                    </div>
                    
                    <div class="scan-results">
                        <h3>Scan Results</h3>
                        <div class="scan-result-content" id="scan-result-content">
                            <p class="scan-placeholder">No QR codes scanned yet</p>
                        </div>
                        <div class="scan-actions">
                            <button class="btn btn-secondary" id="copy-scan">
                                <i class="fas fa-copy"></i> Copy
                            </button>
                            <button class="btn btn-secondary" id="save-scan">
                                <i class="fas fa-save"></i> Save
                            </button>
                            <button class="btn btn-primary" id="create-from-scan">
                                <i class="fas fa-qrcode"></i> Create QR
                            </button>
                        </div>
                    </div>
                </div>
            </section>

            <!-- API Section -->
            <section class="content-section" id="api-section">
                <div class="section-header">
                    <h1><i class="fas fa-code"></i> QR Code API</h1>
                    <div class="section-actions">
                        <button class="btn btn-primary" id="api-docs">
                            <i class="fas fa-book"></i> API Documentation
                        </button>
                        <button class="btn btn-secondary" id="api-test">
                            <i class="fas fa-vial"></i> Test API
                        </button>
                    </div>
                </div>
                
                <div class="api-container">
                    <div class="api-info">
                        <div class="api-key">
                            <h3>Your API Key</h3>
                            <div class="api-key-value">
                                <code id="api-key-value">qrd_5f8e2b1a3c6d9e7f0a1b2c3d4e5f6g7h</code>
                                <button class="btn btn-xs" id="copy-api-key">
                                    <i class="fas fa-copy"></i>
                                </button>
                                <button class="btn btn-xs" id="regenerate-api-key">
                                    <i class="fas fa-sync-alt"></i>
                                </button>
                            </div>
                            <p class="api-key-note">
                                <i class="fas fa-info-circle"></i> Keep this key secure. Do not share it publicly.
                            </p>
                        </div>
                        
                        <div class="api-stats">
                            <h3>API Usage</h3>
                            <div class="api-stat">
                                <span>Requests Today:</span>
                                <span class="stat-value">42/10,000</span>
                                <div class="progress-bar">
                                    <div class="progress" style="width: 0.42%"></div>
                                </div>
                            </div>
                            <div class="api-stat">
                                <span>Requests This Month:</span>
                                <span class="stat-value">1,248/100,000</span>
                                <div class="progress-bar">
                                    <div class="progress" style="width: 1.25%"></div>
                                </div>
                            </div>
                            <div class="api-stat">
                                <span>Total QR Codes:</span>
                                <span class="stat-value">5,672</span>
                            </div>
                        </div>
                    </div>
                    
                    <div class="api-playground">
                        <h3>API Playground</h3>
                        <div class="api-tabs">
                            <button class="api-tab active" data-tab="curl">cURL</button>
                            <button class="api-tab" data-tab="javascript">JavaScript</button>
                            <button class="api-tab" data-tab="python">Python</button>
                            <button class="api-tab" data-tab="php">PHP</button>
                        </div>
                        
                        <div class="api-code-container">
                            <div class="api-code active" id="curl-code">
                                <pre><code>curl -X POST \
  https://api.qrdesignerpro.com/v1/generate \
  -H 'Authorization: Bearer YOUR_API_KEY' \
  -H 'Content-Type: application/json' \
  -d '{
    "content": "https://example.com",
    "size": 500,
    "color": "#4361ee",
    "background": "#ffffff",
    "format": "png"
  }'</code></pre>
                            </div>
                            
                            <div class="api-code" id="javascript-code">
                                <pre><code>const response = await fetch('https://api.qrdesignerpro.com/v1/generate', {
  method: 'POST',
  headers: {
    'Authorization': 'Bearer YOUR_API_KEY',
    'Content-Type': 'application/json'
  },
  body: JSON.stringify({
    content: 'https://example.com',
    size: 500,
    color: '#4361ee',
    background: '#ffffff',
    format: 'png'
  })
});

const data = await response.json();
console.log(data.qr_code_url);</code></pre>
                            </div>
                            
                            <div class="api-code" id="python-code">
                                <pre><code>import requests

url = "https://api.qrdesignerpro.com/v1/generate"
headers = {
    "Authorization": "Bearer YOUR_API_KEY",
    "Content-Type": "application/json"
}
data = {
    "content": "https://example.com",
    "size": 500,
    "color": "#4361ee",
    "background": "#ffffff",
    "format": "png"
}

response = requests.post(url, headers=headers, json=data)
print(response.json())</code></pre>
                            </div>
                            
                            <div class="api-code" id="php-code">
                                <pre><code>$ch = curl_init();

curl_setopt($ch, CURLOPT_URL, 'https://api.qrdesignerpro.com/v1/generate');
curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
curl_setopt($ch, CURLOPT_POST, 1);
curl_setopt($ch, CURLOPT_POSTFIELDS, json_encode(array(
    'content' => 'https://example.com',
    'size' => 500,
    'color' => '#4361ee',
    'background' => '#ffffff',
    'format' => 'png'
)));

$headers = array();
$headers[] = 'Authorization: Bearer YOUR_API_KEY';
$headers[] = 'Content-Type: application/json';
curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);

$result = curl_exec($ch);
echo $result;
curl_close($ch);</code></pre>
                            </div>
                        </div>
                        
                        <div class="api-response">
                            <h4>API Response</h4>
                            <div class="api-response-content">
                                <pre><code>{
  "success": true,
  "qr_code_url": "https://api.qrdesignerpro.com/qr/5f8e2b1a3c6d9e7f0a1b2c3d4e5f6g7h.png",
  "qr_code_id": "5f8e2b1a3c6d9e7f0a1b2c3d4e5f6g7h",
  "size": 500,
  "format": "png",
  "timestamp": "2023-05-15T14:30:22Z"
}</code></pre>
                            </div>
                        </div>
                    </div>
                </div>
            </section>

            <!-- Settings Section -->
            <section class="content-section" id="settings-section">
                <div class="section-header">
                    <h1><i class="fas fa-cog"></i> Settings</h1>
                    <div class="section-actions">
                        <button class="btn btn-primary" id="save-settings">
                            <i class="fas fa-save"></i> Save Settings
                        </button>
                    </div>
                </div>
                
                <div class="settings-container">
                    <div class="settings-tabs">
                        <button class="settings-tab active" data-tab="account">Account</button>
                        <button class="settings-tab" data-tab="appearance">Appearance</button>
                        <button class="settings-tab" data-tab="notifications">Notifications</button>
                        <button class="settings-tab" data-tab="security">Security</button>
                        <button class="settings-tab" data-tab="integrations">Integrations</button>
                        <button class="settings-tab" data-tab="advanced">Advanced</button>
                    </div>
                    
                    <div class="settings-content">
                        <div class="settings-panel active" id="account-panel">
                            <div class="form-group">
                                <label for="account-name">Full Name</label>
                                <input type="text" id="account-name" value="John Doe">
                            </div>
                            <div class="form-group">
                                <label for="account-email">Email Address</label>
                                <input type="email" id="account-email" value="john@example.com">
                            </div>
                            <div class="form-group">
                                <label for="account-company">Company</label>
                                <input type="text" id="account-company" value="ACME Inc.">
                            </div>
                            <div class="form-group">
                                <label for="account-plan">Subscription Plan</label>
                                <div class="plan-info">
                                    <span>Enterprise Plan</span>
                                    <button class="btn btn-xs">Upgrade</button>
                                </div>
                            </div>
                            <div class="form-group">
                                <label for="account-avatar">Profile Picture</label>
                                <input type="file" id="account-avatar" accept="image/*">
                            </div>
                        </div>
                        
                        <div class="settings-panel" id="appearance-panel">
                            <div class="form-group">
                                <label for="app-theme">Theme</label>
                                <select id="app-theme">
                                    <option value="light">Light</option>
                                    <option value="dark">Dark</option>
                                    <option value="system">System Default</option>
                                </select>
                            </div>
                            <div class="form-group">
                                <label for="app-accent">Accent Color</label>
                                <input type="text" id="app-accent" value="#4361ee" class="color-picker">
                            </div>
                            <div class="form-group">
                                <label for="app-layout">Layout Density</label>
                                <select id="app-layout">
                                    <option value="compact">Compact</option>
                                    <option value="normal" selected>Normal</option>
                                    <option value="spacious">Spacious</option>
                                </select>
                            </div>
                            <div class="form-group">
                                <label for="app-font">Font</label>
                                <select id="app-font">
                                    <option value="system">System Default</option>
                                    <option value="roboto">Roboto</option>
                                    <option value="open-sans">Open Sans</option>
                                    <option value="montserrat">Montserrat</option>
                                    <option value="inter">Inter</option>
                                </select>
                            </div>
                        </div>
                        
                        <div class="settings-panel" id="notifications-panel">
                            <div class="form-group">
                                <label>
                                    <input type="checkbox" checked> Email Notifications
                                </label>
                            </div>
                            <div class="form-group">
                                <label>
                                    <input type="checkbox" checked> Project Updates
                                </label>
                            </div>
                            <div class="form-group">
                                <label>
                                    <input type="checkbox" checked> New Features
                                </label>
                            </div>
                            <div class="form-group">
                                <label>
                                    <input type="checkbox"> Marketing Offers
                                </label>
                            </div>
                            <div class="form-group">
                                <label>Notification Frequency</label>
                                <select>
                                    <option value="immediate">Immediately</option>
                                    <option value="daily" selected>Daily Digest</option>
                                    <option value="weekly">Weekly Summary</option>
                                </select>
                            </div>
                        </div>
                        
                        <div class="settings-panel" id="security-panel">
                            <div class="form-group">
                                <label>Password</label>
                                <button class="btn btn-sm">Change Password</button>
                            </div>
                            <div class="form-group">
                                <label>
                                    <input type="checkbox" checked> Two-Factor Authentication
                                </label>
                            </div>
                            <div class="form-group">
                                <label>Active Sessions</label>
                                <div class="sessions-list">
                                    <div class="session-item">
                                        <div class="session-info">
                                            <i class="fas fa-desktop"></i>
                                            <div>
                                                <strong>Windows 10 • Chrome</strong>
                                                <span>Current session • 15 minutes ago</span>
                                            </div>
                                        </div>
                                        <button class="btn btn-xs btn-danger">Logout</button>
                                    </div>
                                    <div class="session-item">
                                        <div class="session-info">
                                            <i class="fas fa-mobile-alt"></i>
                                            <div>
                                                <strong>iPhone • Safari</strong>
                                                <span>2 days ago • New York, US</span>
                                            </div>
                                        </div>
                                        <button class="btn btn-xs btn-danger">Logout</button>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <label>API Access</label>
                                <button class="btn btn-sm">Manage API Keys</button>
                            </div>
                        </div>
                        
                        <div class="settings-panel" id="integrations-panel">
                            <div class="form-group">
                                <label>Google Drive</label>
                                <button class="btn btn-sm">Connect</button>
                            </div>
                            <div class="form-group">
                                <label>Dropbox</label>
                                <button class="btn btn-sm">Connect</button>
                            </div>
                            <div class="form-group">
                                <label>Slack</label>
                                <button class="btn btn-sm">Connect</button>
                            </div>
                            <div class="form-group">
                                <label>Zapier</label>
                                <button class="btn btn-sm">Connect</button>
                            </div>
                            <div class="form-group">
                                <label>Webhooks</label>
                                <button class="btn btn-sm">Configure</button>
                            </div>
                        </div>
                        
                        <div class="settings-panel" id="advanced-panel">
                            <div class="form-group">
                                <label>Default QR Code Settings</label>
                                <button class="btn btn-sm">Configure Defaults</button>
                            </div>
                            <div class="form-group">
                                <label>Data Export</label>
                                <button class="btn btn-sm">Export All Data</button>
                            </div>
                            <div class="form-group">
                                <label>Clear Cache</label>
                                <button class="btn btn-sm">Clear Now</button>
                            </div>
                            <div class="form-group">
                                <label>Debug Mode</label>
                                <label class="switch">
                                    <input type="checkbox">
                                    <span class="slider"></span>
                                </label>
                            </div>
                            <div class="form-group">
                                <label>Reset Preferences</label>
                                <button class="btn btn-sm btn-danger">Reset All</button>
                            </div>
                        </div>
                    </div>
                </div>
            </section>
        </main>
    </div>

    <!-- Modals -->
    <div class="modal" id="success-modal">
        <div class="modal-content">
            <span class="close-modal">&times;</span>
            <div class="modal-icon success">
                <i class="fas fa-check-circle"></i>
            </div>
            <h3>Success!</h3>
            <p id="success-message">QR code has been generated successfully.</p>
            <button class="btn btn-primary modal-close-btn">OK</button>
        </div>
    </div>

    <div class="modal" id="error-modal">
        <div class="modal-content">
            <span class="close-modal">&times;</span>
            <div class="modal-icon error">
                <i class="fas fa-exclamation-circle"></i>
            </div>
            <h3>Error</h3>
            <p id="error-message">An error occurred while generating the QR code.</p>
            <button class="btn btn-primary modal-close-btn">OK</button>
        </div>
    </div>

    <div class="modal" id="loading-modal">
        <div class="modal-content">
            <div class="loading-spinner">
                <div class="spinner"></div>
            </div>
            <h3>Processing</h3>
            <p id="loading-message">Generating your QR code...</p>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // =============================================
            // Global Variables
            // =============================================
            let qrcode = null;
            let currentQRData = null;
            let scanner = null;
            let flashOn = false;
            
            // =============================================
            // Navigation Setup
            // =============================================
            const navItems = document.querySelectorAll('.nav-menu li');
            const sections = document.querySelectorAll('.content-section');
            
            navItems.forEach(item => {
                item.addEventListener('click', function() {
                    const sectionId = this.getAttribute('data-section');
                    
                    // Update active nav item
                    navItems.forEach(i => i.classList.remove('active'));
                    this.classList.add('active');
                    
                    // Update active section
                    sections.forEach(section => section.classList.remove('active'));
                    document.getElementById(`${sectionId}-section`).classList.add('active');
                });
            });

            // =============================================
            // Content Type Switching
            // =============================================
            const typeButtons = document.querySelectorAll('.content-type-btn');
            const contentForms = document.querySelectorAll('.content-form');
            
            typeButtons.forEach(btn => {
                btn.addEventListener('click', function() {
                    const contentType = this.getAttribute('data-type');
                    
                    // Update active button
                    typeButtons.forEach(b => b.classList.remove('active'));
                    this.classList.add('active');
                    
                    // Update active form
                    contentForms.forEach(form => form.classList.remove('active'));
                    document.getElementById(`${contentType}-form`).classList.add('active');
                });
            });

            // =============================================
            // Color Scheme Switching
            // =============================================
            const schemeButtons = document.querySelectorAll('.scheme-btn');
            const colorOptions = document.querySelectorAll('.color-option');
            
            schemeButtons.forEach(btn => {
                btn.addEventListener('click', function() {
                    const scheme = this.getAttribute('data-scheme');
                    
                    // Update active button
                    schemeButtons.forEach(b => b.classList.remove('active'));
                    this.classList.add('active');
                    
                    // Update active color option
                    colorOptions.forEach(option => option.classList.remove('active'));
                    document.querySelector(`.color-option[data-option="${scheme}"]`).classList.add('active');
                });
            });

            // =============================================
            // QR Code Generation
            // =============================================
            const generateBtn = document.getElementById('generate-btn');
            const qrText = document.getElementById('qr-text');
            const qrColor = document.getElementById('qr-color');
            const qrBg = document.getElementById('qr-bg');
            const qrSize = document.getElementById('qr-size');
            const sizeValue = document.getElementById('size-value');
            const qrError = document.getElementById('qr-error');
            const qrMargin = document.getElementById('qr-margin');
            const marginValue = document.getElementById('margin-value');
            const qrcodeContainer = document.getElementById('qrcode');
            
            // Update size value display
            qrSize.addEventListener('input', function() {
                sizeValue.textContent = this.value;
            });
            
            // Update margin value display
            qrMargin.addEventListener('input', function() {
                marginValue.textContent = this.value;
            });
            
            // Generate QR code
            generateBtn.addEventListener('click', generateQRCode);
            
            function generateQRCode() {
                let content = '';
                const contentType = document.querySelector('.content-type-btn.active').getAttribute('data-type');
                
                // Get content based on selected type
                switch(contentType) {
                    case 'text':
                    case 'url':
                        content = qrText.value.trim();
                        break;
                    case 'wifi':
                        const ssid = document.getElementById('wifi-ssid').value.trim();
                        const password = document.getElementById('wifi-password').value.trim();
                        const security = document.getElementById('wifi-security').value;
                        const hidden = document.getElementById('wifi-hidden').checked ? 'H:true;' : '';
                        
                        if (!ssid) {
                            showError('Please enter WiFi SSID');
                            return;
                        }
                        
                        content = `WIFI:T:${security};S:${ssid};P:${password};${hidden};`;
                        break;
                    case 'contact':
                        const name = document.getElementById('contact-name').value.trim();
                        const org = document.getElementById('contact-org').value.trim();
                        const title = document.getElementById('contact-title').value.trim();
                        const phone = document.getElementById('contact-phone').value.trim();
                        const email = document.getElementById('contact-email').value.trim();
                        const url = document.getElementById('contact-url').value.trim();
                        const address = document.getElementById('contact-address').value.trim();
                        const notes = document.getElementById('contact-notes').value.trim();
                        
                        if (!name && !phone && !email && !address) {
                            showError('Please enter at least one contact detail');
                            return;
                        }
                        
                        let vcard = 'BEGIN:VCARD\nVERSION:3.0\n';
                        if (name) vcard += `FN:${name}\nN:${name.split(' ').reverse().join(';')};;;\n`;
                        if (org) vcard += `ORG:${org}\n`;
                        if (title) vcard += `TITLE:${title}\n`;
                        if (phone) vcard += `TEL:${phone}\n`;
                        if (email) vcard += `EMAIL:${email}\n`;
                        if (url) vcard += `URL:${url}\n`;
                        if (address) vcard += `ADR:;;${address};;;\n`;
                        if (notes) vcard += `NOTE:${notes}\n`;
                        vcard += 'END:VCARD';
                        
                        content = vcard;
                        break;
                    case 'email':
                        const to = document.getElementById('email-to').value.trim();
                        const subject = document.getElementById('email-subject').value.trim();
                        const body = document.getElementById('email-body').value.trim();
                        
                        if (!to) {
                            showError('Please enter recipient email');
                            return;
                        }
                        
                        content = `mailto:${to}?subject=${encodeURIComponent(subject)}&body=${encodeURIComponent(body)}`;
                        break;
                    case 'sms':
                        const number = document.getElementById('sms-number').value.trim();
                        const message = document.getElementById('sms-message').value.trim();
                        
                        if (!number) {
                            showError('Please enter phone number');
                            return;
                        }
                        
                        content = `smsto:${number}:${encodeURIComponent(message)}`;
                        break;
                    case 'geo':
                        const lat = document.getElementById('geo-latitude').value.trim();
                        const lng = document.getElementById('geo-longitude').value.trim();
                        const alt = document.getElementById('geo-altitude').value.trim();
                        
                        if (!lat || !lng) {
                            showError('Please enter latitude and longitude');
                            return;
                        }
                        
                        content = `geo:${lat},${lng}${alt ? `,${alt}` : ''}`;
                        break;
                    case 'calendar':
                        const eventTitle = document.getElementById('event-title').value.trim();
                        const eventDesc = document.getElementById('event-description').value.trim();
                        const eventLocation = document.getElementById('event-location').value.trim();
                        const eventStart = document.getElementById('event-start').value;
                        const eventEnd = document.getElementById('event-end').value;
                        const allDay = document.getElementById('event-all-day').checked;
                        
                        if (!eventTitle || !eventStart) {
                            showError('Please enter event title and start time');
                            return;
                        }
                        
                        const startDate = new Date(eventStart);
                        const endDate = eventEnd ? new Date(eventEnd) : new Date(startDate.getTime() + 3600000); // +1 hour if no end time
                        
                        content = `BEGIN:VEVENT
SUMMARY:${eventTitle}
DESCRIPTION:${eventDesc}
LOCATION:${eventLocation}
DTSTART:${formatDateForCalendar(startDate, allDay)}
DTEND:${formatDateForCalendar(endDate, allDay)}
${allDay ? 'X-MICROSOFT-CDO-ALLDAYEVENT:TRUE\n' : ''}END:VEVENT`;
                        break;
                }
                
                if (!content) {
                    showError('Please enter content to encode');
                    return;
                }
                
                // Save current QR data for history
                currentQRData = {
                    content: content,
                    type: contentType,
                    color: qrColor.value,
                    bg: qrBg.value,
                    size: qrSize.value,
                    errorLevel: qrError.value,
                    margin: qrMargin.value,
                    timestamp: new Date().toISOString()
                };
                
                // Clear previous QR code
                qrcodeContainer.innerHTML = '';
                
                // Show loading
                showLoading('Generating QR code...');
                
                // Create new QR code
                setTimeout(() => {
                    qrcode = new QRCode(qrcodeContainer, {
                        text: content,
                        width: parseInt(qrSize.value),
                        height: parseInt(qrSize.value),
                        colorDark: qrColor.value,
                        colorLight: qrBg.value,
                        correctLevel: QRCode.CorrectLevel[qrError.value],
                        margin: parseInt(qrMargin.value)
                    });
                    
                    // Apply additional styling
                    setTimeout(() => {
                        applyQRStyles();
                        hideLoading();
                        showSuccess('QR code generated successfully!');
                    }, 300);
                }, 100);
            }
            
            function formatDateForCalendar(date, allDay) {
                if (allDay) {
                    return date.toISOString().replace(/-/g, '').replace(/T.*$/, '');
                } else {
                    return date.toISOString().replace(/-/g, '').replace(/:/g, '').replace(/\..*/, 'Z');
                }
            }
            
            function applyQRStyles() {
                const qrImg = qrcodeContainer.querySelector('img');
                if (!qrImg) return;
                
                // Apply shape
                const shape = document.querySelector('.shape-btn.active')?.getAttribute('data-shape');
                switch(shape) {
                    case 'circle':
                        qrImg.style.borderRadius = '50%';
                        break;
                    case 'rounded':
                        qrImg.style.borderRadius = '10px';
                        break;
                    case 'diamond':
                        // Would need SVG manipulation for this
                        break;
                    default:
                        qrImg.style.borderRadius = '0';
                }
                
                // Apply logo if exists
                const logoFile = document.getElementById('qr-logo').files[0];
                if (logoFile) {
                    addLogoToQR(logoFile);
                }
                
                // Apply text overlay
                const overlayText = document.getElementById('qr-text-overlay').value;
                if (overlayText) {
                    addTextOverlay(overlayText);
                }
            }
            
            function addLogoToQR(logoFile) {
                const reader = new FileReader();
                reader.onload = function(e) {
                    const logoSize = document.getElementById('logo-size').value;
                    const logoBg = document.getElementById('logo-bg').value;
                    const logoBgColor = document.getElementById('logo-bg-color').value;
                    
                    // Remove existing logo if any
                    const existingLogo = qrcodeContainer.querySelector('.qr-logo');
                    if (existingLogo) existingLogo.remove();
                    
                    // Create logo container
                    const logoContainer = document.createElement('div');
                    logoContainer.className = 'qr-logo';
                    logoContainer.style.position = 'absolute';
                    logoContainer.style.display = 'flex';
                    logoContainer.style.alignItems = 'center';
                    logoContainer.style.justifyContent = 'center';
                    logoContainer.style.width = '100%';
                    logoContainer.style.height = '100%';
                    logoContainer.style.pointerEvents = 'none';
                    
                    // Create logo element
                    const logo = document.createElement('img');
                    logo.src = e.target.result;
                    logo.style.maxWidth = `${logoSize}%`;
                    logo.style.maxHeight = `${logoSize}%`;
                    logo.style.objectFit = 'contain';
                    
                    // Apply background if needed
                    if (logoBg !== 'none') {
                        const bg = document.createElement('div');
                        bg.style.backgroundColor = logoBgColor;
                        bg.style.display = 'flex';
                        bg.style.alignItems = 'center';
                        bg.style.justifyContent = 'center';
                        
                        switch(logoBg) {
                            case 'circle':
                                bg.style.borderRadius = '50%';
                                bg.style.padding = '10px';
                                break;
                            case 'square':
                                bg.style.borderRadius = '0';
                                bg.style.padding = '10px';
                                break;
                            case 'rounded':
                                bg.style.borderRadius = '10px';
                                bg.style.padding = '10px';
                                break;
                        }
                        
                        bg.appendChild(logo);
                        logoContainer.appendChild(bg);
                    } else {
                        logoContainer.appendChild(logo);
                    }
                    
                    qrcodeContainer.style.position = 'relative';
                    qrcodeContainer.appendChild(logoContainer);
                };
                reader.readAsDataURL(logoFile);
            }
            
            function addTextOverlay(text) {
                const textColor = document.getElementById('text-overlay-color').value;
                const textSize = document.getElementById('text-overlay-size').value;
                
                // Remove existing overlay if any
                const existingOverlay = qrcodeContainer.querySelector('.qr-text-overlay');
                if (existingOverlay) existingOverlay.remove();
                
                const overlay = document.createElement('div');
                overlay.className = 'qr-text-overlay';
                overlay.textContent = text;
                overlay.style.position = 'absolute';
                overlay.style.bottom = '10px';
                overlay.style.width = '100%';
                overlay.style.textAlign = 'center';
                overlay.style.color = textColor;
                
                switch(textSize) {
                    case 'small':
                        overlay.style.fontSize = '12px';
                        break;
                    case 'medium':
                        overlay.style.fontSize = '16px';
                        break;
                    case 'large':
                        overlay.style.fontSize = '20px';
                        break;
                }
                
                qrcodeContainer.appendChild(overlay);
            }

            // =============================================
            // Download QR Code
            // =============================================
            const downloadBtn = document.getElementById('download-btn');
            const downloadMenu = document.querySelector('.dropdown-menu');
            
            downloadBtn.addEventListener('click', function(e) {
                e.preventDefault();
                downloadMenu.classList.toggle('show');
            });
            
            // Close dropdown when clicking outside
            document.addEventListener('click', function(e) {
                if (!e.target.closest('.dropdown')) {
                    downloadMenu.classList.remove('show');
                }
            });
            
            // Download options
            document.querySelectorAll('.dropdown-item[data-format]').forEach(item => {
                item.addEventListener('click', function(e) {
                    e.preventDefault();
                    const format = this.getAttribute('data-format');
                    downloadQRCode(format);
                    downloadMenu.classList.remove('show');
                });
            });
            
            function downloadQRCode(format) {
                if (!qrcodeContainer.hasChildNodes()) {
                    showError('Please generate a QR code first');
                    return;
                }
                
                showLoading(`Preparing ${format.toUpperCase()} download...`);
                
                setTimeout(() => {
                    // Temporarily hide text overlay for clean image
                    const textOverlay = qrcodeContainer.querySelector('.qr-text-overlay');
                    if (textOverlay) textOverlay.style.display = 'none';
                    
                    // Get the canvas element
                    const canvas = qrcodeContainer.querySelector('canvas');
                    if (!canvas) {
                        hideLoading();
                        showError('Cannot download at this time');
                        return;
                    }
                    
                    // Create download link
                    const link = document.createElement('a');
                    link.download = `qr-code-${new Date().getTime()}.${format}`;
                    
                    if (format === 'svg') {
                        // Convert canvas to SVG (simplified version)
                        const svg = canvasToSVG(canvas);
                        const svgBlob = new Blob([svg], {type: 'image/svg+xml'});
                        link.href = URL.createObjectURL(svgBlob);
                        link.click();
                    } else if (format === 'pdf') {
                        // Use jsPDF for PDF export
                        const { jsPDF } = window.jspdf;
                        const pdf = new jsPDF({
                            orientation: canvas.width > canvas.height ? 'landscape' : 'portrait',
                            unit: 'px'
                        });
                        
                        // Calculate dimensions to fit the page
                        const pageWidth = pdf.internal.pageSize.getWidth();
                        const pageHeight = pdf.internal.pageSize.getHeight();
                        const ratio = Math.min(pageWidth / canvas.width, pageHeight / canvas.height);
                        const scaledWidth = canvas.width * ratio * 0.95;
                        const scaledHeight = canvas.height * ratio * 0.95;
                        
                        pdf.addImage(canvas.toDataURL('image/png'), 'PNG', 
                            (pageWidth - scaledWidth) / 2, 
                            (pageHeight - scaledHeight) / 2, 
                            scaledWidth, 
                            scaledHeight);
                        pdf.save(link.download);
                    } else {
                        // PNG or JPG
                        link.href = canvas.toDataURL(`image/${format}`);
                        link.click();
                    }
                    
                    // Restore text overlay if it exists
                    if (textOverlay) textOverlay.style.display = 'block';
                    
                    hideLoading();
                    showSuccess(`QR code downloaded as ${format.toUpperCase()}!`);
                }, 500);
            }
            
            function canvasToSVG(canvas) {
                // Simplified SVG conversion - in a real app you'd want a more robust solution
                const width = canvas.width;
                const height = canvas.height;
                const dataURL = canvas.toDataURL('image/png');
                
                return `<?xml version="1.0" encoding="UTF-8"?>
<svg width="${width}" height="${height}" viewBox="0 0 ${width} ${height}" xmlns="http://www.w3.org/2000/svg">
  <image width="${width}" height="${height}" href="${dataURL}"/>
</svg>`;
            }

            // =============================================
            // QR Scanner Functionality
            // =============================================
            const video = document.getElementById('scanner-video');
            const startBtn = document.getElementById('start-scan');
            const stopBtn = document.getElementById('stop-scan');
            const toggleFlashBtn = document.getElementById('toggle-flash');
            const uploadScanBtn = document.getElementById('upload-scan');
            const resultContent = document.getElementById('scan-result-content');
            
            startBtn.addEventListener('click', startScanner);
            stopBtn.addEventListener('click', stopScanner);
            toggleFlashBtn.addEventListener('click', toggleFlashlight);
            uploadScanBtn.addEventListener('click', uploadImageForScanning);
            
            async function startScanner() {
                try {
                    scanner = new QrScanner(
                        video,
                        result => {
                            displayScanResult(result.data);
                            stopScanner();
                        },
                        {
                            highlightScanRegion: true,
                            highlightCodeOutline: true,
                        }
                    );
                    
                    await scanner.start();
                    startBtn.disabled = true;
                    stopBtn.disabled = false;
                } catch (e) {
                    showError('Failed to start scanner: ' + e.message);
                }
            }
            
            function stopScanner() {
                if (scanner) {
                    scanner.stop();
                    scanner = null;
                }
                startBtn.disabled = false;
                stopBtn.disabled = true;
            }
            
            function toggleFlashlight() {
                if (!scanner) return;
                
                flashOn = !flashOn;
                scanner.toggleFlash(flashOn);
                toggleFlashBtn.innerHTML = flashOn ? 
                    '<i class="fas fa-lightbulb-slash"></i> Flashlight' : 
                    '<i class="fas fa-lightbulb"></i> Flashlight';
            }
            
            function uploadImageForScanning() {
                const input = document.createElement('input');
                input.type = 'file';
                input.accept = 'image/*';
                
                input.onchange = async e => {
                    const file = e.target.files[0];
                    if (!file) return;
                    
                    try {
                        showLoading('Scanning image for QR codes...');
                        const result = await QrScanner.scanImage(file);
                        displayScanResult(result);
                        hideLoading();
                    } catch (e) {
                        hideLoading();
                        showError('No QR code found in the image');
                    }
                };
                
                input.click();
            }
            
            function displayScanResult(data) {
                resultContent.innerHTML = `
                    <div class="scan-result">
                        <div class="scan-result-icon">
                            <i class="fas fa-check-circle"></i>
                        </div>
                        <div class="scan-result-data">
                            <pre>${data}</pre>
                        </div>
                    </div>
                `;
            }

            // =============================================
            // History Functionality
            // =============================================
            const saveBtn = document.getElementById('save-btn');
            const clearHistoryBtn = document.getElementById('clear-history');
            const historyGrid = document.getElementById('history-grid');
            
            saveBtn.addEventListener('click', saveToHistory);
            clearHistoryBtn.addEventListener('click', clearHistory);
            
            function saveToHistory() {
                if (!currentQRData) {
                    showError('Please generate a QR code first');
                    return;
                }
                
                // Get QR code image data
                const qrImg = qrcodeContainer.querySelector('canvas');
                if (!qrImg) return;
                
                const imgData = qrImg.toDataURL('image/png');
                
                // Create history item
                const historyItem = document.createElement('div');
                historyItem.className = 'history-item';
                historyItem.dataset.timestamp = currentQRData.timestamp;
                
                historyItem.innerHTML = `
                    <img src="${imgData}" alt="QR Code">
                    <h3>${currentQRData.type.toUpperCase()} QR</h3>
                    <p>Created: ${new Date(currentQRData.timestamp).toLocaleString()}</p>
                    <div class="history-item-actions">
                        <button class="btn btn-sm btn-primary use-history">
                            <i class="fas fa-redo"></i> Reuse
                        </button>
                        <button class="btn btn-sm btn-danger delete-history">
                            <i class="fas fa-trash"></i> Delete
                        </button>
                    </div>
                `;
                
                // Add to history grid
                const emptyMsg = historyGrid.querySelector('.empty-history');
                if (emptyMsg) {
                    emptyMsg.remove();
                }
                
                historyGrid.prepend(historyItem);
                
                // Save to localStorage
                saveToLocalStorage(currentQRData, imgData);
                
                showSuccess('QR code saved to history!');
            }
            
            function saveToLocalStorage(data, imgData) {
                let history = JSON.parse(localStorage.getItem('qrHistory')) || [];
                
                // Add new item
                history.unshift({
                    data: data,
                    imgData: imgData
                });
                
                // Keep only last 20 items
                if (history.length > 20) {
                    history = history.slice(0, 20);
                }
                
                localStorage.setItem('qrHistory', JSON.stringify(history));
            }
            
            function loadFromLocalStorage() {
                const history = JSON.parse(localStorage.getItem('qrHistory')) || [];
                
                if (history.length === 0) return;
                
                // Clear empty message
                const emptyMsg = historyGrid.querySelector('.empty-history');
                if (emptyMsg) {
                    emptyMsg.remove();
                }
                
                // Add history items
                history.forEach(item => {
                    const historyItem = document.createElement('div');
                    historyItem.className = 'history-item';
                    historyItem.dataset.timestamp = item.data.timestamp;
                    
                    historyItem.innerHTML = `
                        <img src="${item.imgData}" alt="QR Code">
                        <h3>${item.data.type.toUpperCase()} QR</h3>
                        <p>Created: ${new Date(item.data.timestamp).toLocaleString()}</p>
                        <div class="history-item-actions">
                            <button class="btn btn-sm btn-primary use-history">
                                <i class="fas fa-redo"></i> Reuse
                            </button>
                            <button class="btn btn-sm btn-danger delete-history">
                                <i class="fas fa-trash"></i> Delete
                            </button>
                        </div>
                    `;
                    
                    historyGrid.appendChild(historyItem);
                });
            }
            
            function clearHistory() {
                if (confirm('Are you sure you want to clear your QR code history?')) {
                    localStorage.removeItem('qrHistory');
                    historyGrid.innerHTML = '<p class="empty-history">No QR codes saved yet. Generate some QR codes and save them to your history!</p>';
                }
            }
            
            // Handle history item actions (delegated)
            historyGrid.addEventListener('click', function(e) {
                const historyItem = e.target.closest('.history-item');
                if (!historyItem) return;
                
                // Reuse QR code
                if (e.target.closest('.use-history')) {
                    const history = JSON.parse(localStorage.getItem('qrHistory')) || [];
                    const item = history.find(item => item.data.timestamp === historyItem.dataset.timestamp);
                    
                    if (item) {
                        // Set form values
                        document.querySelector(`.content-type-btn[data-type="${item.data.type}"]`).click();
                        
                        switch(item.data.type) {
                            case 'text':
                            case 'url':
                                document.getElementById('qr-text').value = item.data.content;
                                break;
                            case 'wifi':
                                const wifiMatch = item.data.content.match(/WIFI:T:(.*?);S:(.*?);P:(.*?);/);
                                if (wifiMatch) {
                                    document.getElementById('wifi-ssid').value = wifiMatch[2];
                                    document.getElementById('wifi-password').value = wifiMatch[3];
                                    document.getElementById('wifi-security').value = wifiMatch[1];
                                    document.getElementById('wifi-hidden').checked = item.data.content.includes('H:true');
                                }
                                break;
                            case 'contact':
                                // Simplified vCard parsing
                                const vcardLines = item.data.content.split('\n');
                                vcardLines.forEach(line => {
                                    if (line.startsWith('FN:')) {
                                        document.getElementById('contact-name').value = line.substring(3);
                                    } else if (line.startsWith('ORG:')) {
                                        document.getElementById('contact-org').value = line.substring(4);
                                    } else if (line.startsWith('TITLE:')) {
                                        document.getElementById('contact-title').value = line.substring(6);
                                    } else if (line.startsWith('TEL:')) {
                                        document.getElementById('contact-phone').value = line.substring(4);
                                    } else if (line.startsWith('EMAIL:')) {
                                        document.getElementById('contact-email').value = line.substring(6);
                                    } else if (line.startsWith('URL:')) {
                                        document.getElementById('contact-url').value = line.substring(4);
                                    } else if (line.startsWith('ADR:')) {
                                        document.getElementById('contact-address').value = line.substring(6).replace(/;/g, ' ');
                                    } else if (line.startsWith('NOTE:')) {
                                        document.getElementById('contact-notes').value = line.substring(5);
                                    }
                                });
                                break;
                            case 'email':
                                const emailMatch = item.data.content.match(/mailto:(.*?)(?:\?subject=(.*?)&body=(.*))?$/);
                                if (emailMatch) {
                                    document.getElementById('email-to').value = emailMatch[1];
                                    if (emailMatch[2]) document.getElementById('email-subject').value = decodeURIComponent(emailMatch[2]);
                                    if (emailMatch[3]) document.getElementById('email-body').value = decodeURIComponent(emailMatch[3]);
                                }
                                break;
                            case 'sms':
                                const smsMatch = item.data.content.match(/smsto:(.*?):(.*)/);
                                if (smsMatch) {
                                    document.getElementById('sms-number').value = smsMatch[1];
                                    document.getElementById('sms-message').value = decodeURIComponent(smsMatch[2]);
                                }
                                break;
                            case 'geo':
                                const geoMatch = item.data.content.match(/geo:(.*?),(.*?)(?:,(.*))?/);
                                if (geoMatch) {
                                    document.getElementById('geo-latitude').value = geoMatch[1];
                                    document.getElementById('geo-longitude').value = geoMatch[2];
                                    if (geoMatch[3]) document.getElementById('geo-altitude').value = geoMatch[3];
                                }
                                break;
                            case 'calendar':
                                // Calendar event parsing would be more complex
                                break;
                        }
                        
                        // Set design options
                        document.getElementById('qr-color').value = item.data.color;
                        document.getElementById('qr-bg').value = item.data.bg;
                        document.getElementById('qr-size').value = item.data.size;
                        sizeValue.textContent = item.data.size;
                        document.getElementById('qr-error').value = item.data.errorLevel;
                        document.getElementById('qr-margin').value = item.data.margin;
                        marginValue.textContent = item.data.margin;
                        
                        // Generate the QR code
                        generateQRCode();
                    }
                }
                
                // Delete history item
                if (e.target.closest('.delete-history')) {
                    if (confirm('Delete this QR code from history?')) {
                        const history = JSON.parse(localStorage.getItem('qrHistory')) || [];
                        const updatedHistory = history.filter(item => item.data.timestamp !== historyItem.dataset.timestamp);
                        
                        localStorage.setItem('qrHistory', JSON.stringify(updatedHistory));
                        historyItem.remove();
                        
                        if (updatedHistory.length === 0) {
                            historyGrid.innerHTML = '<p class="empty-history">No QR codes saved yet. Generate some QR codes and save them to your history!</p>';
                        }
                    }
                }
            });

            // =============================================
            // Template Functionality
            // =============================================
            const templatesGrid = document.querySelector('.templates-grid');
            
            function loadTemplates() {
                // In a real app, you might load these from a server
                const templates = [
                    {
                        id: 'business-card',
                        name: 'Business Card',
                        description: 'Professional contact QR for business cards',
                        type: 'contact',
                        preset: {
                            name: 'Your Name',
                            org: 'Your Company',
                            title: 'Your Title',
                            phone: '+1234567890',
                            email: 'your@email.com',
                            color: '#2c3e50'
                        }
                    },
                    {
                        id: 'wifi-access',
                        name: 'WiFi Access',
                        description: 'Share your WiFi credentials',
                        type: 'wifi',
                        preset: {
                            ssid: 'MyWiFiNetwork',
                            password: 'securepassword',
                            security: 'WPA',
                            color: '#3498db'
                        }
                    },
                    {
                        id: 'social-media',
                        name: 'Social Media',
                        description: 'Link to your social profiles',
                        type: 'url',
                        preset: {
                            url: 'https://www.facebook.com/yourprofile',
                            color: '#4267B2'
                        }
                    },
                    {
                        id: 'event-ticket',
                        name: 'Event Ticket',
                        description: 'QR code for event tickets',
                        type: 'text',
                        preset: {
                            text: 'EVENT123-456789',
                            color: '#e74c3c'
                        }
                    }
                ];
                
                templates.forEach(template => {
                    const templateCard = document.createElement('div');
                    templateCard.className = 'template-card';
                    templateCard.dataset.template = template.id;
                    
                    templateCard.innerHTML = `
                        <div class="template-preview">
                            <img src="https://via.placeholder.com/150/ffffff/000000?text=${encodeURIComponent(template.name)}" alt="${template.name}">
                        </div>
                        <h3>${template.name}</h3>
                        <p>${template.description}</p>
                        <button class="btn btn-sm btn-primary use-template">
                            <i class="fas fa-magic"></i> Use Template
                        </button>
                    `;
                    
                    templatesGrid.appendChild(templateCard);
                });
                
                // Handle template usage
                templatesGrid.addEventListener('click', function(e) {
                    if (e.target.closest('.use-template')) {
                        const templateId = e.target.closest('.template-card').dataset.template;
                        applyTemplate(templateId);
                    }
                });
            }
            
            function applyTemplate(templateId) {
                // In a real app, you'd match this with your template data
                switch(templateId) {
                    case 'business-card':
                        document.querySelector('.content-type-btn[data-type="contact"]').click();
                        document.getElementById('contact-name').value = 'Your Name';
                        document.getElementById('contact-org').value = 'Your Company';
                        document.getElementById('contact-title').value = 'Your Title';
                        document.getElementById('contact-phone').value = '+1234567890';
                        document.getElementById('contact-email').value = 'your@email.com';
                        document.getElementById('qr-color').value = '#2c3e50';
                        break;
                    case 'wifi-access':
                        document.querySelector('.content-type-btn[data-type="wifi"]').click();
                        document.getElementById('wifi-ssid').value = 'MyWiFiNetwork';
                        document.getElementById('wifi-password').value = 'securepassword';
                        document.getElementById('wifi-security').value = 'WPA';
                        document.getElementById('qr-color').value = '#3498db';
                        break;
                    case 'social-media':
                        document.querySelector('.content-type-btn[data-type="url"]').click();
                        document.getElementById('qr-text').value = 'https://www.facebook.com/yourprofile';
                        document.getElementById('qr-color').value = '#4267B2';
                        break;
                    case 'event-ticket':
                        document.querySelector('.content-type-btn[data-type="text"]').click();
                        document.getElementById('qr-text').value = 'EVENT123-456789';
                        document.getElementById('qr-color').value = '#e74c3c';
                        break;
                }
                
                // Generate the QR code
                generateQRCode();
                
                // Switch to design tab
                document.querySelector('.nav-menu li[data-section="design"]').click();
                
                showSuccess(`"${templateId.replace(/-/g, ' ').replace(/\b\w/g, l => l.toUpperCase())}" template applied!`);
            }

            // =============================================
            // Preview Options
            // =============================================
            const previewBg = document.getElementById('preview-bg');
            const previewCustomBg = document.getElementById('preview-custom-bg');
            const previewShadow = document.getElementById('preview-shadow');
            const previewShadowType = document.getElementById('preview-shadow-type');
            const previewDevice = document.getElementById('preview-device');
            const previewSurface = document.getElementById('preview-surface');
            const previewOverlay = document.getElementById('preview-overlay');
            
            previewBg.addEventListener('change', updatePreview);
            previewCustomBg.addEventListener('input', updatePreview);
            previewShadow.addEventListener('change', updatePreview);
            previewShadowType.addEventListener('change', updatePreview);
            previewDevice.addEventListener('change', updatePreview);
            previewSurface.addEventListener('change', updatePreview);
            
            function updatePreview() {
                // Background
                switch(previewBg.value) {
                    case 'transparent':
                        previewOverlay.style.backgroundColor = 'transparent';
                        break;
                    case 'white':
                        previewOverlay.style.backgroundColor = '#ffffff';
                        break;
                    case 'black':
                        previewOverlay.style.backgroundColor = '#000000';
                        break;
                    case 'custom':
                        previewOverlay.style.backgroundColor = previewCustomBg.value;
                        break;
                }
                
                // Shadow
                const qrImg = qrcodeContainer.querySelector('img');
                if (qrImg) {
                    if (previewShadow.checked) {
                        switch(previewShadowType.value) {
                            case 'soft':
                                qrImg.style.filter = 'drop-shadow(0 4px 8px rgba(0, 0, 0, 0.2))';
                                break;
                            case 'hard':
                                qrImg.style.filter = 'drop-shadow(0 2px 4px rgba(0, 0, 0, 0.4))';
                                break;
                            case 'long':
                                qrImg.style.filter = 'drop-shadow(0 8px 16px rgba(0, 0, 0, 0.2))';
                                break;
                            case 'glow':
                                qrImg.style.filter = 'drop-shadow(0 0 10px rgba(67, 97, 238, 0.5))';
                                break;
                        }
                    } else {
                        qrImg.style.filter = 'none';
                    }
                }
                
                // Device and surface preview would require more complex implementation
                // with actual mockup images in a real application
            }

            // =============================================
            // Modals
            // =============================================
            const successModal = document.getElementById('success-modal');
            const errorModal = document.getElementById('error-modal');
            const loadingModal = document.getElementById('loading-modal');
            const closeButtons = document.querySelectorAll('.close-modal, .modal-close-btn');
            
            // Close modals
            closeButtons.forEach(btn => {
                btn.addEventListener('click', function() {
                    successModal.style.display = 'none';
                    errorModal.style.display = 'none';
                });
            });
            
            // Close when clicking outside
            window.addEventListener('click', function(e) {
                if (e.target === successModal) successModal.style.display = 'none';
                if (e.target === errorModal) errorModal.style.display = 'none';
            });
            
            // Global functions to show/hide modals
            window.showSuccess = function(message) {
                document.getElementById('success-message').textContent = message;
                successModal.style.display = 'flex';
            };
            
            window.showError = function(message) {
                document.getElementById('error-message').textContent = message;
                errorModal.style.display = 'flex';
            };
            
            window.showLoading = function(message) {
                document.getElementById('loading-message').textContent = message;
                loadingModal.style.display = 'flex';
            };
            
            window.hideLoading = function() {
                loadingModal.style.display = 'none';
            };

            // =============================================
            // Current Location for Geolocation QR
            // =============================================
            document.getElementById('get-current-location').addEventListener('click', function() {
                if (navigator.geolocation) {
                    showLoading('Getting your current location...');
                    navigator.geolocation.getCurrentPosition(
                        position => {
                            document.getElementById('geo-latitude').value = position.coords.latitude;
                            document.getElementById('geo-longitude').value = position.coords.longitude;
                            if (position.coords.altitude) {
                                document.getElementById('geo-altitude').value = position.coords.altitude;
                            }
                            hideLoading();
                            showSuccess('Location obtained successfully!');
                        },
                        error => {
                            hideLoading();
                            showError('Error getting location: ' + error.message);
                        }
                    );
                } else {
                    showError('Geolocation is not supported by your browser');
                }
            });

            // =============================================
            // Initialize Components
            // =============================================
            function initialize() {
                // Load saved data
                loadFromLocalStorage();
                loadTemplates();
                
                // Generate default QR code
                document.getElementById('qr-text').value = 'https://example.com';
                generateQRCode();
            }
            
            // Start the application
            initialize();
        });
    </script>
</body>
</html>
